import java.awt.EventQueue;

import javax.swing.JFrame;
import java.awt.Dimension;
import javax.swing.JLabel;
import java.awt.Color;
import java.awt.SystemColor;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.awt.Label;
import javax.swing.JTable;
import java.awt.Cursor;
import java.awt.Rectangle;
import java.awt.RenderingHints;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JPanel;
import java.awt.Font;
import java.awt.Graphics2D;

import javax.swing.UIManager;

import com.sun.prism.Image;

import javax.swing.JEditorPane;
import javax.swing.SwingConstants;
import java.awt.Button;

public class board {

	private JFrame frame;
	private JTable table;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					board window = new board();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public board() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setBackground(new Color(0, 0, 0));
		frame.getContentPane().setFocusCycleRoot(true);
		frame.getContentPane().setFocusTraversalPolicyProvider(true);
		frame.getContentPane().setBounds(new Rectangle(50, 50, 50, 50));
		frame.setSize(new Dimension(800, 600));
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		frame.setLocation(500, 200);
		frame.setTitle("OXGame");
		frame.setSize(800,600);
		frame.setResizable(false);
		
		Label userPic1 = new Label("");
		userPic1.setCursor(Cursor.getPredefinedCursor(Cursor.NE_RESIZE_CURSOR));
		userPic1.setBackground(new Color(238, 232, 170));
		userPic1.setBounds(30, 34, 130, 140);
		frame.getContentPane().add(userPic1);
		
		Label userPic2 = new Label("");
		userPic2.setBackground(new Color(240, 230, 140));
		userPic2.setBounds(610, 34, 130, 140);
		frame.getContentPane().add(userPic2);
		
		JPanel panel = new JPanel();
		panel.setBackground(new Color(255, 218, 185));
		panel.setBounds(252, 153, 275, 275);
		frame.getContentPane().add(panel);
		panel.setLayout(null);
		
		JButton btnNewButton = new JButton("-");
		btnNewButton.setFocusable(false);
		btnNewButton.setBounds(new Rectangle(0, 0, 50, 50));
		btnNewButton.setBorder(UIManager.getBorder("CheckBox.border"));
		btnNewButton.setBackground(new Color(240, 255, 240));
		btnNewButton.setHorizontalTextPosition(SwingConstants.CENTER);
		btnNewButton.setFont(new Font("Roboto", Font.BOLD, 72));
		btnNewButton.setBounds(5, 5, 85, 85);
		panel.add(btnNewButton);
		
		JButton btnNewButton_1 = new JButton("-");
		btnNewButton_1.setFocusable(false);
		btnNewButton_1.setBorder(UIManager.getBorder("CheckBox.border"));
		btnNewButton_1.setBackground(new Color(240, 255, 240));
		btnNewButton_1.setHorizontalTextPosition(SwingConstants.CENTER);
		btnNewButton_1.setFont(new Font("Roboto", Font.BOLD, 72));
		btnNewButton_1.setBounds(95, 5, 85, 85);
		panel.add(btnNewButton_1);
		
		JButton btnNewButton_2 = new JButton("-");
		btnNewButton_2.setBorder(UIManager.getBorder("CheckBox.border"));
		btnNewButton_2.setBackground(new Color(240, 255, 240));
		btnNewButton_2.setHorizontalTextPosition(SwingConstants.CENTER);
		btnNewButton_2.setFont(new Font("Roboto", Font.BOLD, 72));
		btnNewButton_2.setBounds(5, 95, 85, 85);
		panel.add(btnNewButton_2);
		
		JButton btnNewButton_3 = new JButton("-");
		btnNewButton_3.setBorder(UIManager.getBorder("CheckBox.border"));
		btnNewButton_3.setBackground(new Color(240, 255, 240));
		btnNewButton_3.setHorizontalTextPosition(SwingConstants.CENTER);
		btnNewButton_3.setFont(new Font("Roboto", Font.BOLD, 72));
		btnNewButton_3.setBounds(185, 5, 85, 85);
		panel.add(btnNewButton_3);
		
		JButton btnNewButton_4 = new JButton("-");
		btnNewButton_4.setBorder(UIManager.getBorder("CheckBox.border"));
		btnNewButton_4.setBackground(new Color(240, 255, 240));
		btnNewButton_4.setHorizontalTextPosition(SwingConstants.CENTER);
		btnNewButton_4.setFont(new Font("Roboto", Font.BOLD, 72));
		btnNewButton_4.setBounds(95, 95, 85, 85);
		panel.add(btnNewButton_4);
		
		JButton btnNewButton_5 = new JButton("-");
		btnNewButton_5.setSize(new Dimension(50, 50));
		btnNewButton_5.setBorder(UIManager.getBorder("CheckBox.border"));
		btnNewButton_5.setBackground(new Color(240, 255, 240));
		btnNewButton_5.setHorizontalTextPosition(SwingConstants.CENTER);
		btnNewButton_5.setFont(new Font("Roboto", Font.BOLD, 72));
		btnNewButton_5.setBounds(185, 95, 85, 85);
		panel.add(btnNewButton_5);
		
		JButton btnNewButton_6 = new JButton("-");
		btnNewButton_6.setSize(new Dimension(50, 50));
		btnNewButton_6.setBorder(UIManager.getBorder("CheckBox.border"));
		btnNewButton_6.setBackground(new Color(240, 255, 240));
		btnNewButton_6.setHorizontalTextPosition(SwingConstants.CENTER);
		btnNewButton_6.setFont(new Font("Roboto", Font.BOLD, 72));
		btnNewButton_6.setBounds(5, 185, 85, 85);
		panel.add(btnNewButton_6);
		
		JButton btnNewButton_7 = new JButton("-");
		btnNewButton_7.setSize(new Dimension(50, 50));
		btnNewButton_7.setBorder(UIManager.getBorder("CheckBox.border"));
		btnNewButton_7.setBackground(new Color(240, 255, 240));
		btnNewButton_7.setHorizontalTextPosition(SwingConstants.CENTER);
		btnNewButton_7.setFont(new Font("Roboto", Font.BOLD, 72));
		btnNewButton_7.setBounds(95, 185, 85, 85);
		panel.add(btnNewButton_7);
		
		JButton btnNewButton_8 = new JButton("-");
		btnNewButton_8.setSize(new Dimension(50, 50));
		btnNewButton_8.setBorder(UIManager.getBorder("CheckBox.border"));
		btnNewButton_8.setBackground(new Color(240, 255, 240));
		btnNewButton_8.setHorizontalTextPosition(SwingConstants.CENTER);
		btnNewButton_8.setFont(new Font("Roboto", Font.BOLD, 72));
		btnNewButton_8.setBounds(185, 185, 85, 85);
		panel.add(btnNewButton_8);
		
        JLabel winU1 = new JLabel("ชนะ :");
        winU1.setForeground(Color.WHITE);
        winU1.setBackground(new Color(0, 255, 0));
        winU1.setFont(new Font("Tahoma", Font.BOLD, 30));
        winU1.setBounds(131, 442, 100, 50);
        frame.getContentPane().add(winU1);
        
        JLabel winU2 = new JLabel("ชนะ :");
        winU2.setForeground(Color.WHITE);
        winU2.setFont(new Font("Tahoma", Font.BOLD, 30));
        winU2.setBackground(new Color(238, 232, 170));
        winU2.setBounds(528, 442, 100, 50);
        frame.getContentPane().add(winU2);
        
        JLabel draw = new JLabel("เสมอ :");
        draw.setForeground(Color.WHITE);
        draw.setFont(new Font("Tahoma", Font.BOLD, 30));
        draw.setBackground(Color.BLACK);
        draw.setBounds(336, 442, 100, 50);
        frame.getContentPane().add(draw);
		
		JLabel timeShow = new JLabel("20");
		timeShow.setForeground(new Color(255, 69, 0));
		timeShow.setFont(new Font("Tahoma", Font.BOLD, 74));
		timeShow.setBounds(342, 34, 94, 91);
		frame.getContentPane().add(timeShow);
		
		JButton btnNewButton_9 = new JButton("Exit");
		btnNewButton_9.setBackground(new Color(255, 99, 71));
		btnNewButton_9.setFont(new Font("Tahoma", Font.BOLD, 22));
	    btnNewButton_9.setBounds(30, 517, 83, 35);
	    frame.getContentPane().add(btnNewButton_9);
		
		 try {
		        ImageIcon img=new ImageIcon(scaleImage(800, 600, ImageIO.read(new File(".\\img\\bg4.jpg"))));	        
		        JLabel background = new JLabel("");
		        background.setBackground(new Color(139, 69, 19));
		        background.setBounds(0, 0, 800, 565);
		        frame.getContentPane().add(background);
		        background.setIcon(img);
		        
		     
		        
		        
		    } catch (Exception ex) {
		        ex.printStackTrace();
		    }
	
	}
	public static BufferedImage scaleImage(int w, int h, BufferedImage img) throws Exception {
	    BufferedImage bi;
	    bi = new BufferedImage(w, h, BufferedImage.TRANSLUCENT);
	    Graphics2D g2d = (Graphics2D) bi.createGraphics();
	    g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
	    g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
	    g2d.drawImage(img, 0, 0, w, h, null);
	    g2d.dispose();
	    return bi;
	}
}
